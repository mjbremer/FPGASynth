module synth (

output AUD_MCLK,  AUD_DACDAT, I2C_SDAT, I2C_SCLK,
input AUD_BCLK, AUD_ADCDAT, AUD_DACLRCK, AUD_ADCLRCK, CLOCK_50, Reset,
input [3:0] Key
);

logic [15:0] LDATA, RDATA;

logic Clk, INIT, INIT_FINISH, adc_full, data_over;


logic [31:0] ADCDATA;

wire [15:0] osc_out;
logic reset_ah;
assign reset_ah = ~Reset;


NCO osc0(.Clk(Clk),
			.Reset(reset_ah),
			.loadF(1'b1),
			.loadA(1'b1),
			.F_in(24'b000000100101100010111111),
			.A_in(16'hFFFF),
			.out(osc_out)
			);

assign LDATA = osc_out;
assign RDATA = osc_out;

soc soc0(.clk_clk(CLOCK_50), .sr_clk(Clk), .reset_reset_n(reset_ah));

audio_interface ai0(.LDATA(LDATA),
						   .RDATA(RDATA),
							.Clk(Clk),
							.Reset(reset_ah),
							.INIT(INIT),
							.INIT_FINISH(INIT_FINISH),
							.adc_full(adc_full),
							.data_over(data_over),
							.AUD_MCLK(AUD_MCLK),
							.AUD_BCLK(AUD_BCLK),
							.AUD_ADCDAT(AUD_ADCDAT),
							.AUD_DACDAT(AUD_DACDAT),
							.AUD_DACLRCK(AUD_DACLRCK),
							.AUD_ADCLRCK(AUD_ADCLRCK),
							.I2C_SDAT(I2C_SDAT),
							.I2C_SCLK(I2C_SCLK),
							.ADCDATA(ADCDATA)
							);


endmodule

